/*---------------------------------------------------------------------------
Command to run model:
--dbt run --select DBT_ETL_MART_SALES_BILLING_FACT

Version     Date            Author             Description
-------     --------        -----------        ----------------------------------
1.0         10/18/2022      Sruthi Kasbe       Updated customer columns and its order
2.0         12/16/2022      Vinay Subramanian  Corrected Currency_exchange logic
---------------------------------------------------------------------------*/
{################# EDW Job Template Variables #################}
{%-set v_pk_list = ['BILLING_KEY']-%}
{%-set v_house_keeping_column = ['BIW_INS_DTTM','BIW_UPD_DTTM','BIW_BATCH_ID','BIW_MD5_KEY']-%}
/*--DBT Variable used during development*/
{% if is_incremental() %}
{%-set v_all_column_list =  edw_get_column_list( this ) -%}
{%-set v_update_column_list = edw_get_quoted_column_list( this ,v_pk_list|list + ['BIW_INS_DTTM']|list) -%}
{%-set v_md5_column_list =  edw_get_md5_column_list( this ,v_pk_list|list+ v_house_keeping_column|list ) -%}
/*--DBT Variable*/
/*--SELECT {{v_all_column_list}}*/
/*--SELECT {{v_update_column_list}}*/
/*--SELECT {{v_md5_column_list}}*/
{% endif %}

{################# Batch control insert and update SQL #################}
{%- set v_dbt_job_name = 'DBT_ETL_MART_SALES_BILLING_FACT'-%}
-- Step 1 Batch process info
{%- set v_watermark = edw_batch_control(v_dbt_job_name,config.get('schema'),config.get('alias') ,config.get('tags'),config.get('materialized') ) -%}
{%- set V_LWM = v_watermark[0] -%}
{%- set V_HWM = v_watermark[1] -%}
{%- set V_START_DTTM = v_watermark[2] -%}
{%- set V_BIW_BATCH_ID = v_watermark[3] -%}
{%- set v_sql_upd_success_batch = "CALL UTILITY.EDW_BATCH_SUCCESS_PROC('"~v_dbt_job_name~"')" -%}


{################# Snowflake Object Configuration #################}
{{
    config(
         description = 'Building ETL table BILLING_FACT for Sales Mart '
        ,transient=true
        ,materialized='table'
        ,schema ='ETL_MART_SALES'
        ,alias='BILLING_FACT'
        ,tags =['MART_SALES']
        ,post_hook= [v_sql_upd_success_batch]	
        )
}}

/* Step 5 Build the ETL table*/

WITH 
CURR_CODE AS 
(
SELECT 
CURRENCY_CD
,ISO_CURRENCY_CD
FROM {{source('STG_MAINFRAME','CURRENCY')}}
QUALIFY(ROW_NUMBER() OVER (PARTITION BY CURRENCY_CD ORDER BY BIW_UPD_DTTM DESC) =1)
),

CURR_EXCH_RATE AS (
SELECT 
  CURR_EXCH.FISCAL_MTH_NUM,
  CURR_EXCH.FM_ISO_CURRENCY_CD AS FROM_CURRENCY_CODE,
  CURR_EXCH.FROM_CURRENCY_CD ,
  CURR_EXCH_1.FROM_CURRENCY_CD TO_CURRENCY_CD,
  CASE 
          WHEN CURR_EXCH_1.EXCHANGE_RTE = 0 
          THEN 0 
          WHEN CURR_EXCH_1.FROM_CURRENCY_CD = CURR_EXCH.FROM_CURRENCY_CD
          THEN 1
          ELSE ROUND(CURR_EXCH.EXCHANGE_RTE::FLOAT * 1 / CURR_EXCH_1.EXCHANGE_RTE::FLOAT ,6)
   END  AS EXCHANGE_RATE
FROM {{source('STG_MAINFRAME','STG1_CURRENCY_EXCHANGE')}} CURR_EXCH
INNER JOIN {{source('STG_MAINFRAME','STG1_CURRENCY_EXCHANGE')}} CURR_EXCH_1
ON  CURR_EXCH.TO_CURRENCY_CD = CURR_EXCH_1.TO_CURRENCY_CD    
AND CURR_EXCH.FISCAL_MTH_NUM = CURR_EXCH_1.FISCAL_MTH_NUM
QUALIFY(ROW_NUMBER() OVER (PARTITION BY CURR_EXCH.FISCAL_MTH_NUM,CURR_EXCH.FM_ISO_CURRENCY_CD,CURR_EXCH_1.FROM_CURRENCY_CD ORDER BY CURR_EXCH.BIW_UPD_DTTM DESC) =1)
),

CURR_CODE_EXCH AS 
(
  SELECT 
  RATE.FISCAL_MTH_NUM,
  RATE.FROM_CURRENCY_CODE,
  CURR.ISO_CURRENCY_CD TO_CURRENCY_CODE,
  RATE.EXCHANGE_RATE
  FROM CURR_EXCH_RATE RATE
  INNER JOIN CURR_CODE CURR
  ON RATE.TO_CURRENCY_CD=CURR.CURRENCY_CD
),

STG_JPY_RATE AS
(
SELECT 
     FISCAL_MTH_NUM
    ,FROM_CURRENCY_CODE
    ,TO_CURRENCY_CODE
    ,EXCHANGE_RATE
from 
CURR_CODE_EXCH
WHERE TO_CURRENCY_CODE  = 'JPY'
),

STG_EUR_RATE AS
(
SELECT 
     FISCAL_MTH_NUM
    ,FROM_CURRENCY_CODE
    ,TO_CURRENCY_CODE
    ,EXCHANGE_RATE
from 
CURR_CODE_EXCH 
WHERE TO_CURRENCY_CODE  = 'EUR'
),

STG_BILL AS
(
SELECT 
    md5(SHIP_TO_CUST_CD) AS DIRECT_CUSTOMER_KEY,
    MD5(SHIP_TO_CUST_CD) AS INDIRECT_CUSTOMER_KEY,
    MD5(END_CUST_CD) AS END_CUSTOMER_KEY,
    md5(CORP_CD) AS CORPORATION_KEY,
    md5(END_CORP) AS END_CORPORATION_KEY,
    md5(INTERNAL_PN) AS INTERNAL_PART_NUMBER_KEY,
    md5(MARKET_PN) AS MARKET_PRODUCT_NUMBER_KEY,
    PROCESS_DT AS PROCESS_DATE,
    REPLACE(SUBSTRING(PROCESS_DT,1,10),'-')::NUMBER AS BILLING_DATE_KEY,
    'ON' AS SOURCE_OF_SALE,
    SALES_ORDER_LI_DL AS SALES_ORDER_LINE_ITEM_DELIVERY,
    REGION||order_num as SALES_ORDER_NUMBER,
    ORDER_LINE_ITEM_NUM AS SALES_ITEM_NUMBER,
    ORDER_DELIVERY_NUM AS SALES_DELIVERY_NUMBER,
    INTERNAL_PN AS INTERNAL_PART_NUMBER,
    MARKET_PN AS MARKET_PRODUCT_NUMBER,
    REGION,
    ORDER_TYPE,
    HANDLING_CODE,
    --CUST_PART_NUM AS CUSTOMER_PART_NUMBER,
    CASE 
    when CUST_PART_NUM='No Value'
    Then NULL
    Else CUST_PART_NUM 
    END AS CUSTOMER_PART_NUMBER,
    CUST_PA_NUM AS CUSTOMER_PA_NUMBER,
    CORP_CD AS DIRECT_CORPORATION_CODE,
    END_CORP AS END_CORPORATION_CODE,
    END_CUST_CD AS END_CUSTOMER_CODE,
    DIST_END_CUST_CD AS DIST_END_CUSTOMER_CODE,
    SHIP_TO_CUST_CD AS INDIRECT_CUSTOMER_CODE,
    SHIP_TO_CUST_CD AS DIRECT_CUSTOMER_CODE,
    CRD_DT AS REQUESTED_DATE,
    MSD_DT AS ORIGINAL_SCHEDULED_SHIP_DATE,
    RSD_DT AS SCHEDULED_SHIPPED_DATE,
    EPSD_DT AS EARLIEST_POSSIBLE_SHIP_DATE,
    PDD_DT AS PLANNED_DELIVERY_DATE,
    RDD_DT AS RESCHEDULED_DELIVERY_DATE,
    CRSD_DT AS REQUESTED_SHIP_DATE,
    ENTRY_DT AS ENTRY_DATE,
    COI AS CUSTOMER_OF_INTEREST,
    NNCO::BOOLEAN AS IS_NNCO,
    NNCO_AGREEMENT_TYPE AS NNCO_AGREEMENT_TYPE,
    ODM_END_CORP_CD AS ODM_END_CORP_CODE,
    BILL_TO_COUNTRY,
    BILL_TO_CUSTCODE AS BILL_TO_CUST_CODE,
    SUB_CORP_CD AS SUB_CORP_CODE,
    SHIP_FROM_AREA,
    CUST_PO_NUM AS CUSTOMER_PO_NUMBER,
    QUOTE_ID,
    OPERATING_UNIT,
    ITEM_STATUS,
    REVERSAL_REQUIRED_FLAG::BOOLEAN AS IS_REVERSAL_REQUIRED,
    ACTIVITY,
    BOOKING_CATEGORY,
    BILL_SOURCE_CD AS BILL_SOURCE_CODE,
    BUSINESS_CLASS_CD AS BUSINESS_CLASS_CODE,
    CREDIT_REASON_CD AS CREDIT_REASON_CODE,
    CREDIT_CODE_DESC as CREDIT_CODE_DESCRIPTION,
    PRICE_SOURCE,
    GL_POSTED_DATE,
    TRANSACTION_DATE,
    CUSTOMER_TRX_ID,
    CUSTOMER_TRX_LINE_ID,
    OBR_TRX_ID,
    TRX_LINE_NUM AS TRX_LINE_NUMBER ,
    BILLING_DOCUMENT_NUMBER,
    ORIGINAL_DOCUMENT_NUM AS ORIGINAL_DOCUMENT_NUMBER,
    TRUE_BILL_FLG::BOOLEAN AS IS_TRUE_BILL,
    GL_REV_ACCT AS GL_REVENUE_ACCOUNT,
    ACCRUAL_CATEGORY,
    JOURNAL_DESCRIPTION,
    LEDGER,
    DEBIT_ACCOUNT,
    CREDIT_ACCOUNT,
    ACCRUAL_RULESET AS ACCRUAL_RULE_SET,
    ACCRUAL_RULEID AS ACCRUAL_RULE_ID,
    ACCRUAL_COMMENTS,
    ACCRUAL_TYPE,
    ACCRUAL_FACTOR,
    ACCRUAL_TRANSACTION_DATE,
    ACCRUAL_FLAG_DSA::BOOLEAN AS IS_ACCRUAL_DSA,
    ACCRUAL_FLAG_DCD::BOOLEAN AS IS_ACCRUAL_DCD,
    ACCRUAL_FLAG_REB::BOOLEAN AS IS_ACCRUAL_REB,
    ACCRUAL_FLAG_DSC::BOOLEAN AS IS_ACCRUAL_DSC,
    ACCRUAL_FLAG_REVERSAL::BOOLEAN AS IS_ACCRUAL_REVERSAL,
    QUANTITY_OVERRIDE_FLAG::BOOLEAN AS IS_QUANTITY_OVERRIDE,
    TRANSACTION_CURRENCY AS TRANSACTION_CURRENCY_ISO_CODE,
    CONTRACT_CURRENCY,
    GROSS_QTY AS BILLING_GROSS_QUANTITY,
    NET_QTY AS BILLING_NET_QUANTITY,
    UNIT_PRICE AS UNIT_PRICE_USD,
    TRX_UNIT_PRICE AS UNIT_PRICE_TRANSACTION_CURRENCY,
    GROSS_AMT AS GROSS_AMOUNT_USD,
    TRX_GROSS_AMT AS GROSS_AMOUNT_TRANSACTION_CURRENCY,
    CONTRACT_CURRENCY_GROSS_AMT AS GROSS_AMOUNT_CONTRACT_CURRENCY,
    NET_AMT AS BILLING_NET_AMOUNT_USD,
    TRX_NET_AMT AS BILLING_NET_AMOUNT_TRANSACTION_CURRENCY,
    CONTRACT_CURRENCY_NET_AMT AS BILLING_NET_AMOUNT_CONTRACT_CURRENCY,
    ACCRUAL_AMOUNT AS ACCRUAL_AMOUNT_USD,
    TRX_ACCRUAL_AMT AS ACCRUAL_AMOUNT_TRANSACTION_CURRENCY,
    CONTRACT_CURRENCY_ACCRUAL_AMT AS ACCRUAL_AMOUNT_CONTRACT_CURRENCY,
    DW_CREATE_DT,
    '{{V_START_DTTM}}'::TIMESTAMP_NTZ BIW_INS_DTTM ,
    '{{V_START_DTTM}}'::TIMESTAMP_NTZ BIW_UPD_DTTM ,
    {{V_BIW_BATCH_ID}} as BIW_BATCH_ID,
    md5(object_construct ('col1',ORDER_NUM, 'col2',ORDER_LINE_ITEM_NUM, 'col3',ORDER_DELIVERY_NUM, 'col4',SALES_ORDER_LI_DL, 'col5',ACTIVITY, 'col6',BILL_SOURCE_CD,
	'col7',BUSINESS_CLASS_CD,'col8',CORP_CD, 'col9',PAL3, 'col10',PAL_CD, 'col11',CRD_DT, 'col12',CREDIT_REASON_CD, 'col13',CREDIT_CODE_DESC, 'col14',TRX_UNIT_PRICE,
	'col15',MSD_DT, 'col16',PRICE_SOURCE, 'col17',PROCESS_DT, 'col18',BILLING_DATE_KEY, 'col19',SHIP_TO_CUST_CD, 'col20',TRUE_BILL_FLG, 'col21',UNIT_PRICE,
	'col22',BILL_TO_COUNTRY, 'col23',SHIP_FROM_AREA, 'col24',CUST_PART_NUM, 'col25',CUST_PO_NUM,'col26',TRX_NET_AMT, 'col27',ORDER_TYPE, 'col28',PRODUCT_ID, 'col29',QUOTE_ID,
	'col30',RSD_DT, 'col31',TRX_LINE_NUM, 'col32',GL_FISCAL_PERIOD, 'col33',OPERATING_UNIT, 'col34',NET_QTY,'col35',BATCH_ID, 'col36',BILL_TO_CUSTCODE,
	'col37',BILLING_DOCUMENT_NUMBER, 'col38',HANDLING_CODE, 'col39',ITEM_STATUS, 'col40',NET_AMT, 'col41',GROSS_AMT, 'col42',PRODUCT_DESCRIPTION, 'col43',PROCESS_MTH_NUM,
	'col44',PROCESS_YR_NUM, 'col45',PROCESS_WEEK_NUM, 'col46',REGION, 'col47',REVERSAL_REQUIRED_FLAG, 'col48',TRANSACTION_CURRENCY,'col49',TRANSACTION_DATE, 'col50',OBR_TRX_ID,
	'col51',ACCRUAL_CATEGORY, 'col52',JOURNAL_DESCRIPTION, 'col53',LEDGER, 'col54',DEBIT_ACCOUNT, 'col55',CREDIT_ACCOUNT, 'col56',ACCRUAL_AMOUNT, 'col57',ACCRUAL_RULESET,
	'col58',ACCRUAL_COMMENTS, 'col59',ACCRUAL_TYPE, 'col60',ACCRUAL_FACTOR, 'col61',ACCRUAL_RULEID, 'col62',ACCRUAL_TRANSACTION_DATE, 'col63',DW_CREATE_DT, 'col64',STAGE1_BILL_SEQ,
	'col65',TRX_GROSS_AMT, 'col66',TRX_ACCRUAL_AMT, 'col67',GROSS_QTY, 'col68',GL_REV_ACCT, 'col69',CUSTOMER_TRX_ID, 'col70',CUSTOMER_TRX_LINE_ID, 'col71',GL_POSTED_DATE,
	'col72',ORIGINAL_DOCUMENT_NUM, 'col73',CUST_PA_NUM, 'col74',QUANTITY_OVERRIDE_FLAG, 'col75',EPSD_DT, 'col76',PDD_DT,'col77',RDD_DT, 'col78',CRSD_DT, 'col79',PRODUCT_FK,
	'col80',CUSTOMER_FK, 'col81',PROCESS_FK, 'col82',CONTRACT_CURRENCY_ACCRUAL_AMT, 'col83',CONTRACT_CURRENCY,'col84',CONTRACT_CURRENCY_NET_AMT, 'col85',CONTRACT_CURRENCY_GROSS_AMT,
	'col86',BOOKING_CATEGORY, 'col87',ACCRUAL_FLAG_DSA, 'col88',ACCRUAL_FLAG_DCD, 'col89',ACCRUAL_FLAG_REB,'col90',ACCRUAL_FLAG_DSC, 'col91',ACCRUAL_FLAG_REVERSAL,
	'col92',END_CUST_CD, 'col93',DIST_END_CUST_CD, 'col94',SALES_ORDER_NUM, 'col95',BU, 'col96',SUB_CORP_CD, 'col97',ENTRY_DT,'col98',COI, 'col99',END_CORP, 'col100',MARKET_PN,
	'col101',INTERNAL_PN, 'col102',NNCO, 'col103',NNCO_AGREEMENT_TYPE, 'col104',ODM_END_CORP_CD)::string ) as BIW_MD5_KEY,
    coalesce(STAGE1_BILL_SEQ::varchar(50),BIW_MD5_KEY::varchar(50)) AS BILLING_KEY
FROM 
    {{ source('STG_ONE', 'BILL_ACTIVITY_DTL') }} 
    -- filter date : (note: current date data are getting filtered)
WHERE 
    {% if var('is_backfill') %}
        DW_CREATE_DT >= '{{var('refresh_start_ts')}}'
		AND DW_CREATE_DT < '{{V_START_DTTM}}'
    {% else %}
        DW_CREATE_DT >= '{{V_LWM}}' 
		AND DW_CREATE_DT <= '{{V_HWM}}'
    {% endif %}
),

FINAL_SQL AS (
SELECT 
distinct 
    BILLING_KEY,
    COALESCE(BILLING_DATE_KEY,'19000101') AS BILLING_DATE_KEY,
    COALESCE(DIRECT_CUSTOMER_KEY, md5(-1)) AS DIRECT_CUSTOMER_KEY,
    COALESCE(INDIRECT_CUSTOMER_KEY, md5(-1)) AS INDIRECT_CUSTOMER_KEY,
    COALESCE(END_CUSTOMER_KEY, md5(-1)) AS END_CUSTOMER_KEY,
    COALESCE(CORPORATION_KEY, md5(-1)) AS DIRECT_CORPORATION_KEY,
    COALESCE(END_CORPORATION_KEY, md5(-1)) AS END_CORPORATION_KEY,
    COALESCE(MARKET_PRODUCT_NUMBER_KEY, md5(-1)) AS MARKET_PRODUCT_NUMBER_KEY,
    COALESCE(INTERNAL_PART_NUMBER_KEY, md5(-1)) AS INTERNAL_PART_NUMBER_KEY,
    DIRECT_CUSTOMER_CODE,
    INDIRECT_CUSTOMER_CODE,
    END_CUSTOMER_CODE,
    DIRECT_CORPORATION_CODE,
    END_CORPORATION_CODE,
    DIST_END_CUSTOMER_CODE,
    MARKET_PRODUCT_NUMBER,
    INTERNAL_PART_NUMBER,
    PROCESS_DATE,
    SOURCE_OF_SALE,
    SALES_ORDER_LINE_ITEM_DELIVERY,
    SALES_ORDER_NUMBER,
    SALES_ITEM_NUMBER,
    SALES_DELIVERY_NUMBER,
    REGION,
    ORDER_TYPE,
    HANDLING_CODE,
    CUSTOMER_PART_NUMBER,
    CUSTOMER_PA_NUMBER,
    REQUESTED_DATE,
    ORIGINAL_SCHEDULED_SHIP_DATE,
    SCHEDULED_SHIPPED_DATE,
    EARLIEST_POSSIBLE_SHIP_DATE,
    PLANNED_DELIVERY_DATE,
    RESCHEDULED_DELIVERY_DATE,
    REQUESTED_SHIP_DATE,
    ENTRY_DATE,
    CUSTOMER_OF_INTEREST,
    IS_NNCO,
    NNCO_AGREEMENT_TYPE,
    ODM_END_CORP_CODE,
    BILL_TO_COUNTRY,
    BILL_TO_CUST_CODE,
    SUB_CORP_CODE,
    SHIP_FROM_AREA,
    CUSTOMER_PO_NUMBER,
    QUOTE_ID,
    OPERATING_UNIT,
    ITEM_STATUS,
    IS_REVERSAL_REQUIRED,
    ACTIVITY,
    BOOKING_CATEGORY,
    BILL_SOURCE_CODE,
    BUSINESS_CLASS_CODE,
    CREDIT_REASON_CODE,
    CREDIT_CODE_DESCRIPTION,
    PRICE_SOURCE,
    GL_POSTED_DATE,
    TRANSACTION_DATE,
    CUSTOMER_TRX_ID,
    CUSTOMER_TRX_LINE_ID,
    OBR_TRX_ID,
    TRX_LINE_NUMBER,
    BILLING_DOCUMENT_NUMBER,
    ORIGINAL_DOCUMENT_NUMBER,
    IS_TRUE_BILL,
    GL_REVENUE_ACCOUNT,
    ACCRUAL_CATEGORY,
    JOURNAL_DESCRIPTION,
    LEDGER,
    DEBIT_ACCOUNT,
    CREDIT_ACCOUNT,
    ACCRUAL_RULE_SET,
    ACCRUAL_RULE_ID,
    ACCRUAL_COMMENTS,
    ACCRUAL_TYPE,
    ACCRUAL_FACTOR,
    ACCRUAL_TRANSACTION_DATE,
    IS_ACCRUAL_DSA,
    IS_ACCRUAL_DCD,
    IS_ACCRUAL_REB,
    IS_ACCRUAL_DSC,
    IS_ACCRUAL_REVERSAL,
    IS_QUANTITY_OVERRIDE,
    TRANSACTION_CURRENCY_ISO_CODE,
    CONTRACT_CURRENCY,
    BILLING_GROSS_QUANTITY,
    BILLING_NET_QUANTITY,
    UNIT_PRICE_USD,
    UNIT_PRICE_USD/EUR.EXCHANGE_RATE UNIT_PRICE_EUR,
    UNIT_PRICE_USD/JPY.EXCHANGE_RATE UNIT_PRICE_JPY,
    UNIT_PRICE_TRANSACTION_CURRENCY,
    GROSS_AMOUNT_USD,
    --GROSS_AMOUNT_USD/TRX_EUR.EXCHANGE_RATE GROSS_AMOUNT_EUR,
    --GROSS_AMOUNT_USD/TRX_JPY.EXCHANGE_RATE GROSS_AMOUNT_JPY,
	TRUNCATE(GROSS_AMOUNT_TRANSACTION_CURRENCY/TRX_EUR.EXCHANGE_RATE,4) GROSS_AMOUNT_EUR,
    TRUNCATE(GROSS_AMOUNT_TRANSACTION_CURRENCY/TRX_JPY.EXCHANGE_RATE,4) GROSS_AMOUNT_JPY,
    GROSS_AMOUNT_TRANSACTION_CURRENCY,
    GROSS_AMOUNT_CONTRACT_CURRENCY,
    BILLING_NET_AMOUNT_USD,
    --BILLING_NET_AMOUNT_USD/TRX_EUR.EXCHANGE_RATE BILLING_NET_AMOUNT_EUR,
    --BILLING_NET_AMOUNT_USD/TRX_JPY.EXCHANGE_RATE BILLING_NET_AMOUNT_JPY,
	TRUNCATE(BILLING_NET_AMOUNT_TRANSACTION_CURRENCY/TRX_EUR.EXCHANGE_RATE,4) BILLING_NET_AMOUNT_EUR,
	TRUNCATE(BILLING_NET_AMOUNT_TRANSACTION_CURRENCY/TRX_JPY.EXCHANGE_RATE,4) BILLING_NET_AMOUNT_JPY,
    BILLING_NET_AMOUNT_TRANSACTION_CURRENCY,
    BILLING_NET_AMOUNT_CONTRACT_CURRENCY,
    ACCRUAL_AMOUNT_USD,
   -- ACCRUAL_AMOUNT_USD/EUR.EXCHANGE_RATE ACCRUAL_AMOUNT_EUR,
  -- ACCRUAL_AMOUNT_USD/JPY.EXCHANGE_RATE ACCRUAL_AMOUNT_JPY,
    ACCRUAL_AMOUNT_TRANSACTION_CURRENCY,
    ACCRUAL_AMOUNT_CONTRACT_CURRENCY,
    DW_CREATE_DT,
    BIW_INS_DTTM,
    BIW_UPD_DTTM,
    BIW_BATCH_ID
FROM STG_BILL AS BILL
LEFT JOIN STG_EUR_RATE EUR
    ON EUR.FISCAL_MTH_NUM = REPLACE(SUBSTRING(BILL.PROCESS_DATE,1,7),'-')
    AND EUR.FROM_CURRENCY_CODE='USD'

LEFT JOIN STG_JPY_RATE JPY
    ON JPY.FISCAL_MTH_NUM = REPLACE(SUBSTRING(BILL.PROCESS_DATE,1,7),'-')
    AND JPY.FROM_CURRENCY_CODE='USD'

LEFT JOIN STG_EUR_RATE TRX_EUR
    ON TRX_EUR.FISCAL_MTH_NUM = REPLACE(SUBSTRING(BILL.PROCESS_DATE,1,7),'-')
    AND TRX_EUR.FROM_CURRENCY_CODE= BILL.TRANSACTION_CURRENCY_ISO_CODE

LEFT JOIN STG_JPY_RATE TRX_JPY
    ON TRX_JPY.FISCAL_MTH_NUM = REPLACE(SUBSTRING(BILL.PROCESS_DATE,1,7),'-')
    AND TRX_JPY.FROM_CURRENCY_CODE= BILL.TRANSACTION_CURRENCY_ISO_CODE
)

SELECT 
FINAL_SQL.*
,md5(object_construct ('col1',BILLING_DATE_KEY, 'col2',DIRECT_CUSTOMER_KEY, 'col3',INDIRECT_CUSTOMER_KEY, 'col4',DIRECT_CORPORATION_KEY, 'col5',END_CORPORATION_KEY,
'col6',INTERNAL_PART_NUMBER_KEY, 'col7',MARKET_PRODUCT_NUMBER_KEY, 'col8',PROCESS_DATE, 'col9',SOURCE_OF_SALE, 'col10',SALES_ORDER_LINE_ITEM_DELIVERY, 'col11',SALES_ORDER_NUMBER,
'col12',SALES_ITEM_NUMBER, 'col13',SALES_DELIVERY_NUMBER, 'col14',INTERNAL_PART_NUMBER, 'col15',MARKET_PRODUCT_NUMBER, 'col16',REGION, 'col17',ORDER_TYPE, 'col18',HANDLING_CODE,
'col19',CUSTOMER_PART_NUMBER,'col20',CUSTOMER_PA_NUMBER, 'col21',DIRECT_CORPORATION_CODE, 'col22',END_CORPORATION_CODE, 'col23',END_CUSTOMER_CODE, 'col24',DIST_END_CUSTOMER_CODE,
'col25',INDIRECT_CUSTOMER_CODE, 'col26',DIRECT_CUSTOMER_CODE, 'col27',REQUESTED_DATE, 'col28',ORIGINAL_SCHEDULED_SHIP_DATE, 'col29',SCHEDULED_SHIPPED_DATE, 'col30',EARLIEST_POSSIBLE_SHIP_DATE,
'col31',PLANNED_DELIVERY_DATE, 'col32',RESCHEDULED_DELIVERY_DATE, 'col33',REQUESTED_SHIP_DATE, 'col34',ENTRY_DATE, 'col35',CUSTOMER_OF_INTEREST, 'col36',IS_NNCO,
'col37',NNCO_AGREEMENT_TYPE, 'col38',ODM_END_CORP_CODE, 'col39',BILL_TO_COUNTRY, 'col40',BILL_TO_CUST_CODE, 'col41',SUB_CORP_CODE, 'col42',SHIP_FROM_AREA, 
'col43',CUSTOMER_PO_NUMBER, 'col44',QUOTE_ID, 'col45',OPERATING_UNIT, 'col46',ITEM_STATUS, 'col47',IS_REVERSAL_REQUIRED, 'col48',ACTIVITY, 'col49',BOOKING_CATEGORY, 
'col50',BILL_SOURCE_CODE, 'col51',BUSINESS_CLASS_CODE, 'col52',CREDIT_REASON_CODE, 'col53',CREDIT_CODE_DESCRIPTION, 'col54',PRICE_SOURCE, 'col55',GL_POSTED_DATE, 
'col56',TRANSACTION_DATE, 'col57',CUSTOMER_TRX_ID, 'col58',CUSTOMER_TRX_LINE_ID, 'col59',OBR_TRX_ID, 'col60',TRX_LINE_NUMBER, 'col61',BILLING_DOCUMENT_NUMBER, 
'col62',ORIGINAL_DOCUMENT_NUMBER, 'col63',IS_TRUE_BILL, 'col64',GL_REVENUE_ACCOUNT, 'col65',ACCRUAL_CATEGORY, 'col66',JOURNAL_DESCRIPTION, 'col67',LEDGER,
'col68',DEBIT_ACCOUNT, 'col69',CREDIT_ACCOUNT, 'col70',ACCRUAL_RULE_SET, 'col71',ACCRUAL_RULE_ID, 'col72',ACCRUAL_COMMENTS, 'col73',ACCRUAL_TYPE,
'col74',ACCRUAL_FACTOR, 'col75',ACCRUAL_TRANSACTION_DATE, 'col76',IS_ACCRUAL_DSA, 'col77',IS_ACCRUAL_DCD, 'col78',IS_ACCRUAL_REB, 'col79',IS_ACCRUAL_DSC,
'col80',IS_ACCRUAL_REVERSAL, 'col81',IS_QUANTITY_OVERRIDE, 'col82',TRANSACTION_CURRENCY_ISO_CODE, 'col83',CONTRACT_CURRENCY, 'col84',BILLING_GROSS_QUANTITY, 
'col85',BILLING_NET_QUANTITY, 'col86',UNIT_PRICE_USD, 'col87',UNIT_PRICE_EUR, 'col88',UNIT_PRICE_JPY, 'col89',UNIT_PRICE_TRANSACTION_CURRENCY, 'col90',GROSS_AMOUNT_USD,
'col91',GROSS_AMOUNT_EUR, 'col92',GROSS_AMOUNT_JPY, 'col93',GROSS_AMOUNT_TRANSACTION_CURRENCY, 'col94',GROSS_AMOUNT_CONTRACT_CURRENCY, 'col95',BILLING_NET_AMOUNT_USD,
'col96',BILLING_NET_AMOUNT_EUR, 'col97',BILLING_NET_AMOUNT_JPY, 'col98',BILLING_NET_AMOUNT_TRANSACTION_CURRENCY, 'col99',BILLING_NET_AMOUNT_CONTRACT_CURRENCY, 
'col100',ACCRUAL_AMOUNT_USD, 'col101',ACCRUAL_AMOUNT_TRANSACTION_CURRENCY, 'col102',ACCRUAL_AMOUNT_CONTRACT_CURRENCY, 'col103',DW_CREATE_DT,
'col104',END_CUSTOMER_KEY)::string ) as BIW_MD5_KEY
FROM 
FINAL_SQL
