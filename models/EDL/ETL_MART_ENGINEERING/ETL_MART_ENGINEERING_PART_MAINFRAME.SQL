-- dbt run --select ETL_MART_ENGINEERING_PART_MAINFRAME
{################# EDW Job Template Variables #################}
{%-set v_pk_list = ['PART_ID']-%}
{% if is_incremental() %}
{%-set v_house_keeping_column = ['BIW_INS_DTTM','BIW_UPD_DTTM','BIW_BATCH_ID','BIW_MD5_KEY']-%}
{%-set v_all_column_list =  edw_get_column_list( this ) -%}
{%-set v_update_column_list =  edw_get_quoted_column_list( this ,v_pk_list|list + ['BIW_INS_DTTM']|list) -%}
{%-set v_md5_column_list =  edw_get_md5_column_list( this ,v_pk_list|list+ v_house_keeping_column|list ) -%}
--DBT Variable
--SELECT {{v_all_column_list}}  
--SELECT {{v_update_column_list}}  
--SELECT {{v_md5_column_list}}
{% endif %}

{################# Batch control insert and update SQL #################}
{%- set v_dbt_job_name = 'DBT_ETL_MART_ENGINEERING_PART_MAINFRAME'-%}
-- Step 1 Batch process info
{%- set v_watermark = edw_batch_control(v_dbt_job_name,config.get('schema'),config.get('alias') ,config.get('tags'),config.get('materialized') ) -%}
{%- set V_LWM = v_watermark[0] -%}
{%- set V_HWM = v_watermark[1] -%}
{%- set V_START_DTTM = v_watermark[2] -%}
{%- set V_BIW_BATCH_ID = v_watermark[3] -%}
{%- set v_sql_upd_success_batch = "CALL UTILITY.EDW_BATCH_SUCCESS_PROC('"~v_dbt_job_name~"')" -%}

{################# Snowflake Object Configuration #################}
{{
    config(
         description = 'Building ETL Part table with Mainframe Attributes'
        ,transient=true   
        ,materialized='table'
        ,schema ='ETL_MART_ENGINEERING'
        ,alias='PART_MAINFRAME'
        ,tags =['MART_ENGINEERING','MART_SALES']
        ,post_hook= [v_sql_upd_success_batch]	
        )
}}

WITH MAINFRAME_PART AS
(
SELECT
    PRODUCT_ID as PART_ID,
    PART_ADD_DT,
    PART_STATUS_CD,
    PROD_CLASS_CD,
    PROD_LINE_ID,
    PRODLINE_COMPTYPE,
    CUSTSPEC_FLG,
    FO_LEADTIME_WK_NUM,
    HTS_EU_CD_DESC,
    SBU_CD,
    PTI4_CD,
    SUBSTR(NVL(PTI4_CD, ' '), 1, 1) AS PAL1_CODE,
    SUBSTR(NVL(PTI4_CD, ' '), 1, 2) AS PAL2_CODE,
    SUBSTR(NVL(PTI4_CD, ' '), 1, 3) AS PAL3_CODE,
    -- Not required available in GPS owner try_to_boolean(NCNR_FLAG) AS IS_NCNR,
    CASE
        WHEN PART_STATUS_CD IN ('1', '5', 'V', 'Y', '#', '~') THEN 'EOL'
        ELSE 'Active'
    END AS PART_STATUS_GROUP,
    LAST_CHG_USERID,
-------Legacy--------
       MARKONLY_FLG,
       CUSTOMER_CONSIGNED,
       ENG_PART_FLG,
       HALIDE_FREE_FLAG,
       ECCN_CD,
       Y2K_READY_FLG,
       VALU_NONVALU_FLG,
       AEC_QUALIFIED,
       COMMODITY_CD,
       BACKGRIND_CD,
       WAFER_TECH_CD,
       BUMP_CD,
       BURN_IN_CD,
       PROBE_CD,
       TEST_PROCESS_CD,
       HTS_EU_CD,
       HARMONIZE_CD,
       HTS_US_CD_DESC,
       QUAL_STATUS,
       DOC_NUM,
       PPAP_CAPABLE,
       QUAL_TYPE,
       STD_CONVERS_RATE,
       UL_LISTED,
       unit_of_issue_cd,
       WFR_SIZE,
       LAST_CHG_DT,
       LAST_ORDER_DT,
       LAST_BUY_DT,
       BURN_FLG,
       MAKE_BUY_FLG,
       ELECTSPEC_FLG,
       PRODUCT_DESC,
       NCNR_FLAG,
       PACKAGE_CD,
       MILITARY_FLG,
       TAPE_REEL_FLG
FROM {{source ('STG_MAINFRAME','STG1_PRODUCT_DAILY')}} 
QUALIFY( row_number() OVER (PARTITION BY PRODUCT_ID  ORDER BY BIW_UPD_DTTM DESC)=1) 
),   
PART_SPEC AS
(
SELECT 
     PART_ID,
     POQ_CONTAINER_CD,
     POQ_QTY,
     SOQ_CONTAINER_CD,
     MPQ_CONTAINER_CD,
     MPQ_QTY,
     SOQ_QTY
FROM {{source ('STG_MAINFRAME','PRODUCT_CNTNR_SPEC_DTL_BASE')}}
QUALIFY( row_number() OVER (PARTITION BY PART_ID  ORDER BY BIW_UPD_DTTM DESC)=1) 
),

PART_STATUS AS
(
SELECT 
     PARTSTATUS_CD,
     DESCRIPTION AS PART_STATUS_DESCRIPTION
FROM {{source ('STG_MAINFRAME','STG1_PART_STATUS')}}  
QUALIFY( row_number() OVER (PARTITION BY PARTSTATUS_CD  ORDER BY BIW_UPD_DTTM DESC)=1) 
),

-----------One Stage Reference -----------------

PAL_CODE_DESC AS (
    SELECT 
    TRIM(PTI_CD) PAL_CODE,
    TRIM(PTI_DESC) AS PAL_DESCRIPTION
FROM {{source ('STG_MAINFRAME','STG1_PTI_DAILY')}}
QUALIFY( row_number() OVER (PARTITION BY PTI_CD ORDER BY BIW_UPD_DTTM DESC)=1)
),

PRODUCT_MORE_BASE AS (
    SELECT
        PART_ID,
        COUNTRY_CODE,
        HARMONIZED_TARIFF
FROM {{source ('STG_MAINFRAME','PRODUCT_MORE_BASE')}}
WHERE HARMONIZED_TARIFF IS NOT NULL
QUALIFY( row_number() OVER (PARTITION BY PART_ID ORDER BY BIW_UPD_DTTM DESC)=1)
),

STG1_MFG_PACKAGE AS
(
    SELECT
    PACKAGE_GROUP_CODE,
    LEADED_DIE_ATTACH,
    FINISH_CODE,
    DESCRIPTION AS MFG_DESC,
    KEY_FIELD
    FROM {{source ('STG_MAINFRAME','STG1_MFG_PACKAGE')}}
    QUALIFY( row_number() OVER (PARTITION BY KEY_FIELD,PACKAGE_GROUP_CODE ORDER BY BIW_UPD_DTTM DESC)=1)
),

STG1_PACKAGE_CODES AS
(
    SELECT 
        PACKAGE_CODE,
        MOTOROLA_CASE_NO
    FROM {{source ('STG_ONE_STAGE','STG1_PACKAGE_CODES')}}
    QUALIFY( row_number() OVER (PARTITION BY PACKAGE_CODE ORDER BY BIW_UPD_DTTM DESC)=1)
),

STG1_AMI_ON_QUAL_STATUS_XREF AS
(
    SELECT
        ON_QUAL_STATUS_CODE,
        QUAL_STATUS_DESC
    FROM {{source ('STG_ONE_STAGE','STG1_AMI_ON_QUAL_STATUS_XREF')}}
    QUALIFY( row_number() OVER (PARTITION BY ON_QUAL_STATUS_CODE ORDER BY BIW_UPD_DTTM DESC)=1)

),

STG1_QUAL_TYPE_XREF AS
(
    SELECT
        QUAL_TYPE,
        DESCRIPTION AS QUAL_DESC
    FROM {{source ('STG_ONE_STAGE','STG1_QUAL_TYPE_XREF')}}
    QUALIFY( row_number() OVER (PARTITION BY QUAL_TYPE ORDER BY BIW_UPD_DTTM DESC)=1)
),

STG1_PRODUCT_CLASS AS
(
    SELECT 
       PRODCLASS_CD as KEY_FIELD,
        DESCRIPTION AS DISCRIPTION
    FROM {{source ('STG_MAINFRAME','STG1_PRODUCT_CLASS')}}
    QUALIFY( row_number() OVER (PARTITION BY KEY_FIELD ORDER BY BIW_UPD_DTTM DESC)=1)
),


SBU_SHORT_DESC AS
(
    SELECT 
        PTI_CD,
        DIV_ORG_SHORT_DESC AS SBU_SHORT_DESC
    FROM {{source ('STG_DWH_DATAWARE','PTI_BASE')}}
    WHERE EFFECTIVE_TO_DT >= TO_DATE ('39991231', 'YYYYMMDD')
    AND TV_STATUS_CD= 'A'
    QUALIFY( row_number() OVER (PARTITION BY PTI_CD ORDER BY EFFECTIVE_FROM_DT DESC,BIW_UPD_DTTM)=1)
),

STG_PRICE_OUT AS
(
SELECT
    ONPN,
    PROGRAM_CD,
    PTI_CD,
    EFFECTIVE_DT,
    EXPIRATION_DT,
    PRICE_BOOK_FLG,
    MARKET_CD,
    STEP_PRICE_FLG,
    NCNR_FLG
FROM {{source ('STG_GPS2_GPS_ADMIN','STG_PRICE_OUT')}} 
WHERE
EXPIRATION_DT > CURRENT_DATE  AND 
EFFECTIVE_DT <= CURRENT_DATE  AND 
NOT (PTI_CD LIKE 'PZ%')
QUALIFY( row_number() OVER (PARTITION BY ONPN  ORDER BY EFFECTIVE_DT desc, BIW_UPD_DTTM DESC)=1) 
),

XXON_PAL_HIERARCHY AS
(
  SELECT
    PAL3_CD,
    BU_CD,
    GROUP_CD,
    GROUP_DESC,
    DIV_CD,
    DIV_DESC,
    BU_DESC,
    OPR_CD,
    OPR_DESC
FROM
    {{source ('STG_EBS_APPS','XXON_PAL_HIERARCHY')}} 
QUALIFY( row_number() OVER (PARTITION BY  PAL3_CD  ORDER BY BIW_UPD_DTTM DESC)=1)
)

SELECT  
    PART.PART_ID,
    PART.PART_ADD_DT,
    PART.PART_STATUS_CD,
    STATUS.PART_STATUS_DESCRIPTION,
    PART.HTS_EU_CD_DESC,
    PART.FO_LEADTIME_WK_NUM,
    PART.PRODLINE_COMPTYPE,
    PART.PROD_LINE_ID,
    PART.SBU_CD,
    PART.LAST_CHG_USERID,
    PART.PROD_CLASS_CD ,
    PART.PART_STATUS_GROUP, 
    PART.CUSTSPEC_FLG,  
    PART.PAL1_CODE,
    PART.PAL2_CODE,
    PART.PAL3_CODE,
    PART.PTI4_CD,
-------------SPEC Attribute -------------
    SPEC.POQ_CONTAINER_CD,
    SPEC.POQ_QTY,
    SPEC.SOQ_CONTAINER_CD,

----------Legacy Attributes---------------------
    TO_DATE('1-1-1900', 'MM-DD-YYYY') AS EFF_BEGIN_DT,
    CURRENT_DATE() AS EFF_END_DT, 
    'LEGACY'AS PART_SOURCE,
    COALESCE(TRY_TO_BOOLEAN(PART.MARKONLY_FLG),'FALSE')::BOOLEAN AS IS_CUSTOM_MARK_ONLY,  
    COALESCE(TRY_TO_BOOLEAN(PART.CUSTOMER_CONSIGNED),'FALSE')::BOOLEAN AS IS_CUSTOMER_CONSIGN_TO_ON, 
    COALESCE(TRY_TO_BOOLEAN(PART.ENG_PART_FLG),'FALSE')::BOOLEAN AS IS_ENG_PART,
    COALESCE(TRY_TO_BOOLEAN(PART.HALIDE_FREE_FLAG),'FALSE')::BOOLEAN AS IS_HALIDE_FREE,
    NVL((CASE WHEN PART.ECCN_CD = 'ITAR' THEN 'Y' ELSE 'N' END),'#') AS ITAR_FLG,
    COALESCE(TRY_TO_BOOLEAN(PART.Y2K_READY_FLG),'FALSE')::BOOLEAN AS IS_PB_FREE_LEADS,
    COALESCE(TRY_TO_BOOLEAN(PART.VALU_NONVALU_FLG),'FALSE')::BOOLEAN AS IS_VALUED_PART,
    '1' AS COMPNT_CNT,
    '1' AS TOTAL_COMPNT_CNT,
    '1' AS DISTINCT_COMPNT_CNT,
    ' ' AS CUST_SPEC_CONTROLLED_FLG,
    ' ' AS AEC_QUAL,
    ' ' AS EXPERT_DATA_SRC_NM,    
    ' ' AS EXPERT_USER_ID, 
    ' ' AS EXPERT_NM,   
    ' ' AS EXPERT_EMAIL,   
    ' ' AS BU_MGR_ID ,   
    ' ' AS BU_MGR_NM,  
    ' ' AS PLANNING_DIR_ID ,
    ' ' AS PLANNING_DIR_NM,
    ' ' AS PART_QUAL_TRGT_MKT_DESC,
    ' ' AS LEGACY_COMPANY_NM,
    ' ' AS GLOBAL_PART_ID,
    ' ' AS CONTROL_DOC_CURR_REV_VAL,
    ' ' AS PART_OWNER_NM,
    ' ' AS PREDOMINANT_OPN_PART_ID,
    0 AS DCE_CYCLE_TM_DAYS,
    0 AS FAMILY_LEAD_TM_DAYS,
    0 AS POINT_LEAD_TM_DAYS,
    0 AS TREND_LEAD_TM_DAYS,
    0 AS OVERRIDE_LEAD_TM_DAYS,
    0 AS PLANNING_SYSTEM_LEAD_TM_DAYS,
    ' ' AS CAPACITY_GROUP_CD,
    ' ' AS WFA_SITE_CD,
    ' ' AS WPR_SITE_CD,
    ' ' AS BSNSS_UNIT_CD,
    ' ' AS PART_AREA_CD,
    ' ' AS PART_SUB_AREA_CD,
     0 AS ASSMBLY_RATIO_NUM,
     0 AS AVG_USAGE_NUM,
    ' ' AS PART_PROGRAM_CD,
    ' ' AS SUPPLY_CHN_PLNG_FLG,
    ' '  AS ANCHOR_STAR_PROD_FLG,
    ' ' AS CAPC_CONSTR_COLOR ,
    ' ' AS IO_PART_CLASS,
    ' ' AS IO_CATEGORY,
    ' ' AS MFG_PART_ID,
    ' ' AS DIVISION_CD,
    ' ' AS DIVISION_DESC,
    ' ' AS BSNSS_UNIT_DESC,    
    ' ' AS OPERTNL_CD,    
    ' ' AS OPERTNL_DESC,
    -1  AS FO_LEAD_TM_WK_NUM,
    ' ' AS IO_OVERRIDE_CATEGORY,
    ' ' AS CAPC_CONSTR_COLOR_CALCED, 
    ' ' AS CAPC_CONSTR_COLOR_OVRD, 
    ' ' AS CAPC_CONSTR_COLOR_OVRD_UID, 
    ' ' AS CAPC_CONSTR_COLOR_OVRD_RSN, 
    ' ' AS CAPC_CONSTR_PRIM_CONSTR_RG,
    ' ' AS SUBJECT_EXPORT_ADMIN_REG,
    0 AS MLQ,
    '0'::BOOLEAN AS PB_FREE_PART_FLG,
    ' ' AS PB_FREE_PART_DESC,
    ' ' AS PB_FREE_PART_EXEMPT,
    '0'::BOOLEAN AS LABEL_SYMBOL_ROHS_EU_FLG,
    '0'::BOOLEAN AS LABEL_SYMBOL_ROHS_CHINA_FLG,
    ' ' AS LABEL_SYMBOL_ROHS_CHINA_VAL,
    '0'::BOOLEAN AS LABEL_SYMBOL_PBFREE_2LI_FLG,
    '0'::BOOLEAN AS LABEL_SYMBOL_2LI_FLG,
    '0'::BOOLEAN AS LABEL_SYMBOL_ECAT_FLG,
    '0'::BOOLEAN AS LABEL_SYMBOL_HALIDE_FREE_FLG,
    '0'::BOOLEAN AS LABEL_SYMBOL_RU_FLG,
    ' ' AS LABEL_SYMBOL_ECAT_CD,
    ' ' AS HTS_EU_8_CD,

    NVL(PAL2_DESC.PAL_DESCRIPTION,' ') AS PAL2_DESC,
    NVL(PAL3_DESC.PAL_DESCRIPTION,' ') AS PAL3_DESC,
    NVL(PAL4_DESC.PAL_DESCRIPTION,' ')AS PAL4_DESC,

    TO_DATE('1-1-1900', 'MM-DD-YYYY') AS PART_REL_FCST_DT,
    NVL(PART.PROD_CLASS_CD,' ') AS PART_CLASS_CD,
    NVL(PART.AEC_QUALIFIED,' ') AS AEC_QUALIFIED_CD,
    NVL(PART.COMMODITY_CD,' ') AS COMMODITY_CD,
    NVL(PART.ECCN_CD,' ') AS ECCN_CD,
    NVL(PART.BACKGRIND_CD,' ') AS ERP_RESOURCE_BSP_CD,
    NVL(PART.WAFER_TECH_CD,' ') AS ERP_RESOURCE_FAB_CD,
    NVL(PART.BUMP_CD,' ') AS ERP_RESOURCE_FSP_CD,
    NVL(PART.BURN_IN_CD,' ') AS ERP_RESOURCE_MEF_CD,
    NVL(PART.PROBE_CD,' ') AS ERP_RESOURCE_SWF_CD,
    NVL(PART.TEST_PROCESS_CD,' ') AS ERP_RESOURCE_TST_CD,
    CASE 
    WHEN PART.HARMONIZE_CD IS NOT NULL 
     THEN PART.HARMONIZE_CD
    WHEN PART.HARMONIZE_CD IS NULL 
    AND PRDT_MRE.HARMONIZED_TARIFF IS NULL
    THEN NULL
    ELSE
    SUBSTR(PRDT_MRE.HARMONIZED_TARIFF , 1, 4)||'.'|| SUBSTR(PRDT_MRE.HARMONIZED_TARIFF, 5, 2)||'.'||SUBSTR(PRDT_MRE.HARMONIZED_TARIFF, 7, 4)
    END AS HARMONIZE_CD,
    NVL(PART.HTS_EU_CD,' ') AS HTS_EU_CD, 
  --  NVL(PART.HTS_EU_CD_DESC,' ') AS HTS_EU_CD_DESC, 
    NVL(PART.HTS_US_CD_DESC,' ') AS HTS_US_CD_DESC, 
    NVL(PART.PRODLINE_COMPTYPE,' ') AS PART_COMP_TYPE_CD,
    NVL(PART.QUAL_STATUS,' ') AS PART_RELEASE_STATUS_CD,
    NVL(PART.doc_num,' ') AS PART_SPEC_ID,
    NVL(PART.PPAP_CAPABLE,' ') AS PPAP_CAPABLE_CD,
    NVL(PART.PROD_LINE_ID,' ') AS PART_LINE_ID,
    NVL(PART.qual_type,' ') AS QUALITY_LVL_CD,
  --  NVL(PART.SBU_CD,' ') AS SBU_CD,
    NVL(SPEC.MPQ_CONTAINER_CD,' ') AS MPQ_PRI_CONTAINER_CD,
    NVL(TRUNCATE(SPEC.MPQ_QTY),0)::NUMBER AS MPQ_PRI_CONTAINER_QTY,
    NVL(PART.STD_CONVERS_RATE,0)::NUMBER AS PDPW_VAL,
    COALESCE(TRY_TO_BOOLEAN(PART.UL_LISTED),'FALSE')::BOOLEAN AS UL_LISTED_FLG,
    NVL(PART.unit_of_issue_cd,' ') AS UOM_OPERATIONS_CD,
    NVL(CASE WHEN CAST(NVL(REPLACE(REPLACE(PART.WFR_SIZE,'CF', 0),'EA',0),0)AS NUMBER) BETWEEN 3 AND 18 
         THEN CAST(NVL(REPLACE(REPLACE(PART.WFR_SIZE,'CF', 0),'EA',0),0)AS NUMBER) * 25 
         ELSE CAST(NVL(REPLACE(REPLACE(PART.WFR_SIZE,'CF', 0),'EA',0),0)AS NUMBER) 
    END,0) AS WAFER_SIZE_VAL,
    NVL(PART.LAST_CHG_DT,TO_DATE('1-1-1900', 'MM-DD-YYYY')) AS LAST_CHG_DT,
    NVL(PART.LAST_ORDER_DT,TO_DATE('1-1-1900', 'MM-DD-YYYY')) AS LAST_ORDER_DT,
    NVL(PART.LAST_BUY_DT,TO_DATE('1-1-1900', 'MM-DD-YYYY')) AS LAST_SHIP_DT,
    COALESCE(TRY_TO_BOOLEAN(PART.BURN_FLG),'FALSE')::BOOLEAN AS BURN_IN_FLG,
    NVL(PART.MAKE_BUY_FLG,' ') AS BUY_SELL_FLG,
    COALESCE(TRY_TO_BOOLEAN(PART.ELECTSPEC_FLG),'FALSE')::BOOLEAN AS CUSTOM_ELEC_TEST_FLG,
    NVL(PART.PRODUCT_DESC,' ') AS PART_DESC,
    PART.NCNR_FLAG,
    MFG_PKG.LEADED_DIE_ATTACH AS LEADED_DIE_ATTACH_FLG,
    PART.MILITARY_FLG AS MILITARY_FLG,
    '31-DEC-3999' AS EFFECTIVE_TO_DATE, 
    'A' AS TV_STATUS_CD,
    PROD_CLS.DISCRIPTION,
    PKG_CD.MOTOROLA_CASE_NO,
    MFG_PKG.FINISH_CODE,
    MFG_PKG.MFG_DESC AS ERP_RESOURCE_ASY_DESC,
    PART.PACKAGE_CD AS ERP_RESOURCE_ASY_CD,
    STUS_XREF.QUAL_STATUS_DESC,
    QUAL_XREF.QUAL_DESC AS QUALITY_LVL_TGT_MRKT_DESC,
    SPEC.SOQ_QTY,
    COALESCE(TRY_TO_BOOLEAN(PART.TAPE_REEL_FLG),'FALSE')::BOOLEAN AS TAPE_REEL_FLG,
    SBU_DESC.SBU_SHORT_DESC,
    PRC_OUT.STEP_PRICE_FLG,
    PRC_OUT.ONPN,
    PRC_OUT.PROGRAM_CD,
    PRC_OUT.PRICE_BOOK_FLG,
    ' ' AS ENGG_CHNG_ORDER_ID,
    ' ' AS MARKET_PN,
    '0'::BOOLEAN AS IS_MARKET_PN,
    ' ' AS ENG_PKG_VAR_ID,
    ' ' AS FLOW_CODE,
    '0'::BOOLEAN AS IS_SPEC_CNTRL_BOM,
    ' ' AS DOCUMENT_ISSUE,
    ' ' AS ENG_PKG_CODE,
    '0'::BOOLEAN AS IS_CONTAIN_ENCRYPT,
    ' ' AS SOLUTION_SELLING_TYPE,
    TRY_TO_DATE('1/1/1990') AS RELEASE_DATE,
    0 AS SOQ_QUANTITY,
    ' ' AS PACKAGE_CODE_DESCRIPTION,
    ' ' AS EXEMPTIONS,
    '0'::BOOLEAN AS IS_ROHS,
    TRY_TO_DATE('1/1/1990') AS NPD_DATE,
    '0'::BOOLEAN AS IS_ON_TARGET,
    TRY_TO_DATE('1/1/1990') AS PART_ADD_TIMESTAMP,
    PAL_HIRARCHY.GROUP_CD,
    PAL_HIRARCHY.GROUP_DESC,
    NULL AS BUSINESS_GROUP,
    PART.DOC_NUM AS DOCUMENT_NUMBER,
    '{{V_START_DTTM}}'::TIMESTAMP_NTZ BIW_INS_DTTM ,
    '{{V_START_DTTM}}'::TIMESTAMP_NTZ BIW_UPD_DTTM ,
    {{V_BIW_BATCH_ID}} as BIW_BATCH_ID
FROM MAINFRAME_PART PART

LEFT JOIN PART_STATUS STATUS 
    ON PART.PART_STATUS_CD = STATUS.PARTSTATUS_CD

LEFT JOIN PART_SPEC SPEC 
    ON PART.PART_ID = SPEC.PART_ID 
-----------One Stage Attribute -----------------

 LEFT OUTER JOIN PAL_CODE_DESC  PAL2_DESC
    ON PART.PAL2_CODE=PAL2_DESC.PAL_CODE

LEFT OUTER JOIN PAL_CODE_DESC  PAL3_DESC
    ON PART.PAL3_CODE=PAL3_DESC.PAL_CODE

LEFT OUTER JOIN PAL_CODE_DESC  PAL4_DESC
    ON PART.PTI4_CD=PAL4_DESC.PAL_CODE
 
LEFT OUTER JOIN PRODUCT_MORE_BASE PRDT_MRE
    ON PART.PART_ID=PRDT_MRE.PART_ID

LEFT OUTER JOIN STG1_MFG_PACKAGE MFG_PKG
    ON PART.PACKAGE_CD=MFG_PKG.KEY_FIELD

LEFT OUTER JOIN STG1_PACKAGE_CODES PKG_CD
    ON PART.PACKAGE_CD=PKG_CD.PACKAGE_CODE

LEFT OUTER JOIN STG1_AMI_ON_QUAL_STATUS_XREF STUS_XREF
    ON PART.QUAL_STATUS=STUS_XREF.ON_QUAL_STATUS_CODE

LEFT OUTER JOIN STG1_QUAL_TYPE_XREF QUAL_XREF
    ON PART.QUAL_TYPE=QUAL_XREF.QUAL_TYPE

LEFT OUTER JOIN STG1_PRODUCT_CLASS PROD_CLS
    ON PART.PROD_CLASS_CD=PROD_CLS.KEY_FIELD


LEFT OUTER JOIN SBU_SHORT_DESC SBU_DESC
    ON PART.PTI4_CD=SBU_DESC.PTI_CD

LEFT OUTER JOIN STG_PRICE_OUT PRC_OUT
    ON PART.PART_ID=PRC_OUT.ONPN

LEFT OUTER JOIN XXON_PAL_HIERARCHY PAL_HIRARCHY
    ON SUBSTR(PART.PTI4_CD,1,3)=PAL_HIRARCHY.PAL3_CD

