--dbt run --full-refresh --select ETL_MART_ORGANIZATION
-- dbt run --select ETL_MART_ORGANIZATION
{################# EDW Job Template Variables #################}
{%-set v_pk_list = ['ORGANIZATION_ID']-%}
{% if is_incremental() %}
{%-set v_house_keeping_column = ['BIW_INS_DTTM','BIW_UPD_DTTM','BIW_BATCH_ID','BIW_MD5_KEY']-%}
{%-set v_all_column_list =  edw_get_column_list( this ) -%}
{%-set v_update_column_list =  edw_get_quoted_column_list( this ,v_pk_list|list + ['BIW_INS_DTTM']|list) -%}
{%-set v_md5_column_list =  edw_get_md5_column_list( this ,v_pk_list|list+ v_house_keeping_column|list ) -%}
--DBT Variable
--SELECT {{v_all_column_list}}
--SELECT {{v_update_column_list}}
--SELECT {{v_md5_column_list}}
{% endif %}

{################# Batch control insert and update SQL #################}
-- ORACLE JOB NAME: HUB_PROCMNT_INCR_INV_ORG_MAP
{%- set v_dbt_job_name = 'DBT_ETL_MART_ORGANIZATION'-%}
-- Step 1 Batch process info
{%- set v_watermark = edw_batch_control(v_dbt_job_name,config.get('schema'),config.get('alias') ,config.get('tags'),config.get('materialized') ) -%}
{%- set V_LWM = v_watermark[0] -%}
{%- set V_HWM = v_watermark[1] -%}
{%- set V_START_DTTM = v_watermark[2] -%}
{%- set V_BIW_BATCH_ID = v_watermark[3] -%}
{%- set v_sql_upd_success_batch = "CALL UTILITY.EDW_BATCH_SUCCESS_PROC('"~v_dbt_job_name~"')" -%}

{################# Snowflake Object Configuration #################}
{{
    config(
          description = 'Building table ORGANIZATION for ETL_MART'
          ,transient=true
          ,materialized='table'
          ,schema ='ETL_MART'
          ,alias='ORGANIZATION'
          ,unique_key= v_pk_list
          ,tags =['MART']
          ,merge_update_columns = []
          ,post_hook= [v_sql_upd_success_batch]	
        )
}}


WITH 
HR_ORG_UNITS AS 
(
SELECT 
  ORGANIZATION_ID,
  NAME ,
  LOCATION_ID ,
  DATE_FROM ,
  DATE_TO ,
  INTERNAL_EXTERNAL_FLAG ,
  TYPE
FROM 
{{ source('STG_EBS_APPS', 'HR_ORGANIZATION_UNITS') }}
--- Using ORGANIZATION_ID instead of Name(NK), since partitoining on NK is generating duplicates.
QUALIFY(ROW_NUMBER() OVER(PARTITION BY ORGANIZATION_ID ORDER BY BIW_UPD_DTTM DESC NULLS LAST)=1)
),

HR_ORG_UNITS_OU AS 
(
SELECT 
*
FROM 
HR_ORG_UNITS
where TYPE = 'OU'
),

ORG_DEF AS 
(
SELECT 
  ORGANIZATION_NAME, 
  ORGANIZATION_CODE ,
  ORGANIZATION_ID ,
  DISABLE_DATE ,
  INVENTORY_ENABLED_FLAG ,
  OPERATING_UNIT
 FROM 
{{ source('STG_EBS_APPS', 'ORG_ORGANIZATION_DEFINITIONS') }}
QUALIFY(ROW_NUMBER() OVER(PARTITION BY ORGANIZATION_CODE ORDER BY BIW_UPD_DTTM DESC NULLS LAST)=1)
),
 
HR_LOCATIONS AS 
(
SELECT 
  LOCATION_ID ,
  LOCATION_CODE ,
  DESCRIPTION ,
  INACTIVE_DATE ,
  ADDRESS_LINE_1 ,
  ADDRESS_LINE_2 ,
  ADDRESS_LINE_3 ,
  TOWN_OR_CITY ,
  COUNTRY ,
  POSTAL_CODE ,
  ATTRIBUTE2 
FROM
{{ source('STG_EBS_APPS', 'HR_LOCATIONS') }}
--- Using LOCATION_ID instead of LOCATION_CODE(NK), since partitoining on NK is generating duplicates.
QUALIFY(ROW_NUMBER() OVER( PARTITION BY LOCATION_ID ORDER BY BIW_UPD_DTTM DESC NULLS LAST)=1)
),

MTL_PARAMETERS AS 
(
SELECT 
  ORGANIZATION_CODE ,
  ORGANIZATION_ID ,
  PRIMARY_COST_METHOD
 FROM 
{{ source('STG_EBS_APPS', 'MTL_PARAMETERS') }}
QUALIFY(ROW_NUMBER() OVER( PARTITION BY ORGANIZATION_CODE ORDER BY BIW_UPD_DTTM DESC NULLS LAST)=1)
),

HR_OPERATING_UNITS AS 
(
SELECT 
  NAME,
  ORGANIZATION_ID ,
  SHORT_CODE
FROM 
{{ source('STG_EBS_APPS', 'HR_OPERATING_UNITS') }}
QUALIFY(ROW_NUMBER() OVER( PARTITION BY NAME ORDER BY BIW_UPD_DTTM DESC NULLS LAST)=1)
),

ORG_UNITS_MTL_PARAMS AS 
(
SELECT 
  ORG.ORGANIZATION_ID,
  ORG.LOCATION_ID,
  ORG.DATE_FROM,
  ORG.NAME,
  ORG.DATE_TO,
  ORG.INTERNAL_EXTERNAL_FLAG,
  MTL.ORGANIZATION_ID AS ORGANIZATION_ID_1 ,
  MTL.ORGANIZATION_CODE,
  MTL.PRIMARY_COST_METHOD 
FROM 
  HR_ORG_UNITS ORG INNER JOIN MTL_PARAMETERS MTL
ON ORG.ORGANIZATION_ID = MTL.ORGANIZATION_ID
)

SELECT 
  MTL.ORGANIZATION_ID_1 AS ORGANIZATION_ID ,
  NVL(NVL(OPR.ORGANIZATION_ID,OPR_UNITS.ORGANIZATION_ID),-1) AS OPERATING_UNIT_ID ,
  'EBS' AS SOURCE_SYSTEM ,
  MTL.ORGANIZATION_CODE AS ORGANIZATION_CODE ,
  MTL.NAME AS ORGANIZATION_NAME ,
  LOC.DESCRIPTION AS ORGANIZATION_DESCRIPTION ,
  (DEF.INVENTORY_ENABLED_FLAG)::BOOLEAN AS IS_ORGANIZATION_ENABLED ,
  MTL.PRIMARY_COST_METHOD AS STD_COSTING_CODE ,
  MTL.INTERNAL_EXTERNAL_FLAG AS ORGANIZATION_INTERNAL_EXTERNAL_CODE ,
  LOC.LOCATION_CODE AS ORGANIZATION_LOCATION_CODE ,
  LOC.ADDRESS_LINE_1 AS ORGANIZATION_ADDRESS_LINE1 ,
  LOC.ADDRESS_LINE_2 AS ORGANIZATION_ADDRESS_LINE2 ,
  LOC.ADDRESS_LINE_3 AS ORGANIZATION_ADDRESS_LINE3 ,
  LOC.TOWN_OR_CITY AS ORGANIZATION_CITY_NAME ,
  LOC.COUNTRY AS ORGANIZATION_COUNTRY_CODE ,
  LOC.POSTAL_CODE AS ORGANIZATION_ZIPCODE ,
  LOC.ATTRIBUTE2 AS ORGANIZATION_FE_BE_CODE ,
  LOC.INACTIVE_DATE AS ORGANIZATION_INACTIVE_DATE ,
  DEF.DISABLE_DATE AS ORGANIZATION_DISABLED_DATE ,
  MTL.DATE_FROM AS ORGANIZATION_SOURCE_SYSTEM_EFFECTIVE_FROM_DATE ,
  MTL.DATE_TO AS ORGANIZATION_SOURCE_SYSTEM_EFFECTIVE_TO_DATE ,
  NVL(ORG.NAME,'UNK') AS OPERATING_UNIT_NAME ,
  NVL(OPR.SHORT_CODE,OPR_UNITS.SHORT_CODE) AS OPERATING_UNIT_CODE ,
  ORG.TYPE AS OPERATING_UNIT_TYPE_CODE ,
  LOC_OU.DESCRIPTION AS OPERATING_UNIT_DESCRIPTION ,
  ORG.INTERNAL_EXTERNAL_FLAG AS OPERATION_UNIT_INTERNAL_EXTERNAL_CODE ,
  LOC_OU.LOCATION_CODE AS OPERATING_UNIT_LOCATION_CODE ,
  LOC_OU.ADDRESS_LINE_1 AS OPERATING_UNIT_ADDRESS_LINE1 ,
  LOC_OU.ADDRESS_LINE_2 AS OPERATING_UNIT_ADDRESS_LINE2 ,
  LOC_OU.ADDRESS_LINE_3 AS OPERATING_UNIT_ADDRESS_LINE3 ,
  LOC_OU.TOWN_OR_CITY AS OPERATING_UNIT_CITY_NAME ,
  LOC_OU.POSTAL_CODE AS OPERATING_UNIT_ZIPCODE ,
  LOC_OU.COUNTRY AS OPERATING_UNIT_COUNTRY_CODE ,
  LOC_OU.ATTRIBUTE2 AS OPERATING_UNIT_FE_BE_CODE ,
  NVL(ORG.DATE_FROM,TO_DATE('01/01/1950','MM/DD/YYYY')) AS OPERATING_UNIT_SOURCE_SYSTEM_EFFECTIVE_FROM_DATE ,
  ORG.DATE_TO AS OPERATING_UNIT_SOURCE_SYSTEM_EFFECTIVE_TO_DATE ,
  '{{V_START_DTTM}}'::TIMESTAMP_NTZ BIW_INS_DTTM ,
	'{{V_START_DTTM}}'::TIMESTAMP_NTZ BIW_UPD_DTTM ,
   {{V_BIW_BATCH_ID}} as BIW_BATCH_ID
FROM 
ORG_UNITS_MTL_PARAMS MTL
LEFT OUTER JOIN ORG_DEF DEF
ON DEF.ORGANIZATION_ID = MTL.ORGANIZATION_ID_1
LEFT OUTER JOIN HR_LOCATIONS LOC
ON LOC.LOCATION_ID = MTL.LOCATION_ID
LEFT OUTER JOIN HR_OPERATING_UNITS OPR
ON DEF.OPERATING_UNIT = OPR.ORGANIZATION_ID
LEFT OUTER JOIN HR_OPERATING_UNITS OPR_UNITS 
ON  REGEXP_SUBSTR(SUBSTR(MTL.NAME,5), '[0-9][0-9][0-9]') = OPR_UNITS.SHORT_CODE 
LEFT OUTER JOIN HR_ORG_UNITS_OU ORG
ON NVL(OPR.ORGANIZATION_ID,OPR_UNITS.ORGANIZATION_ID) = ORG.ORGANIZATION_ID
LEFT OUTER JOIN HR_LOCATIONS LOC_OU 
ON ORG.LOCATION_ID = LOC_OU.LOCATION_ID